{"version":3,"file":"static/js/186.5bc360a1.chunk.js","mappings":"wQAIaA,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAsBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBADd,wCAGd,gHAE8BC,EAAAA,EAAAA,IAAgBR,EAASM,GAFvD,gBAEYG,EAFZ,EAEYA,QACRL,GAAW,OAAIK,IAHnB,mDAK0B,aAAlB,KAAMC,QALd,qGAHc,sBAgBd,OAhBc,mCAcdC,GAEO,kBAAML,EAAgBM,OAAtB,CACR,GAAE,CAACZ,KAGF,wBACGG,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,2BACE,yCAAeA,MACf,uBAAID,MAFGD,EADE,KAQlB,EAED,W","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getRevieews() {\n      try {\n        const { results } = await getMovieReviews(movieId, abortController);\n        setReviews([...results]);\n      } catch (error) {\n        if (error.message === 'canceled') {\n          return;\n        }\n        // setError(error);\n      }\n    }\n    getRevieews();\n\n    return () => abortController.abort();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.map(({ id, content, author }) => (\n        <li key={id}>\n          <b>{`Author: ${author}`}</b>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","abortController","AbortController","getMovieReviews","results","message","getRevieews","abort","map","id","content","author"],"sourceRoot":""}