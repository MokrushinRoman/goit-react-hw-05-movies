{"version":3,"file":"static/js/247.02db3bcb.chunk.js","mappings":"kOAyCA,UArCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAsBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBADd,wCAGd,gHAE2BC,EAAAA,EAAAA,IAAgBR,EAASM,GAFpD,gBAEYH,EAFZ,EAEYA,KACRC,GAAQ,OAAID,IAHhB,mDAK0B,aAAlB,KAAMM,QALd,qGAHc,sBAgBd,OAhBc,mCAcdC,GAEO,kBAAMJ,EAAgBK,OAAtB,CACR,GAAE,CAACX,KAGF,wBACGG,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,2BACE,gBAAKC,IAAKD,EAAcE,IAAKJ,KAC7B,uBAAIA,KACJ,4CAAkBC,OAHXF,EADD,KASf,C","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getRevieews() {\n      try {\n        const { cast } = await getMovieCredits(movieId, abortController);\n        setCast([...cast]);\n      } catch (error) {\n        if (error.message === 'canceled') {\n          return;\n        }\n        // setError(error);\n      }\n    }\n    getRevieews();\n\n    return () => abortController.abort();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast.map(({ id, name, character, profile_path }) => (\n        <li key={id}>\n          <img src={profile_path} alt={name} />\n          <p>{name}</p>\n          <p>{`Character: ${character}`}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","abortController","AbortController","getMovieCredits","message","getRevieews","abort","map","id","name","character","profile_path","src","alt"],"sourceRoot":""}